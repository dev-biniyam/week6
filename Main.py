import data
import model

data = data.Data()
model = model.Model()

print("fetching data...")
mydata = data.fetch_dataset()
print("dropping correlated features...")
data.drop_correlated(mydata)
print("removing outliers...")
data.remove_outliers(mydata)
print("encoding categorical features...")
mydata = data.encode_features(mydata)
print("spliting data into train/test sets...")
train, test = data.train_split(mydata)
print("up sampling...")
train = data.upsample_minority(train)
print("spliting predictor/target features...")
X_train, y_train, X_test, y_test = data.target_split(train, test)
print("scaling datasets...")
X_train, X_test = data.scale(X_train, X_test)
print("performing dimensionality reduction...")
X_train, X_test = data.reduce_dimension(X_train, X_test)
X_train = data.to_df(data=X_train)
X_test = data.to_df(data=X_test)
y_train = data.to_df(data=y_train)
y_test = data.to_df(data=y_test)
print("Modelling using logistic regression...")
logistic_reg = model.train_logistic_classifier(X_train, y_train)
print("Modelling using xgboost classifier...")
xgb = model.train_xgboost(X_train, y_train)
print("Modelling using multi-layer perceptrons...")
perceptron = model.train_perceptrons(X_train, y_train)
print("Logistic Regression Accuracy: ",model.get_accuracy(logistic_reg,X_test, y_test))
print("XGBoost Accuracy: ",model.get_accuracy(xgb,X_test, y_test))
print("Multi Layer Perceptron Accuracy: ",model.get_accuracy(perceptron,X_test, y_test))